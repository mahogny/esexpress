
create schema esexpress;

create extension pg_trgm;   -- requires -contrib

CREATE TABLE esexpress.geneinfo (
	geneid     TEXT  PRIMARY KEY,
	genesym    TEXT NOT NULL,
	pvalbiovar NUMERIC NOT NULL
);

CREATE INDEX geneinfotrgm ON geneinfo USING gist(genesym gist_trgm_ops);




CREATE TABLE esexpress.genecorr (
	dataset   TEXT,
	fromgene  TEXT,
	togene    TEXT[] NOT NULL,
	corr      REAL[] NOT NULL,   --indexed over the other gene "to"
	corrp     REAL[] NOT NULL,
	corrv     REAL[] NOT NULL,     --drop columns p,v,m?
	corrm     REAL[] NOT NULL,
	PRIMARY KEY (dataset, fromgene)
);
CREATE INDEX ON esexpress.genecorr (fromgene);

CREATE TABLE esexpress.geneexp (
	dataset    TEXT,
	fromgene   TEXT,
	fromcell   TEXT[] NOT NULL,
	exp        REAL[] NOT NULL,   --indexed over cells
	PRIMARY KEY (dataset,fromgene)
);
CREATE INDEX ON esexpress.geneexp (fromgene);


CREATE TABLE esexpress.genecorrdiff (
	datasetA   TEXT,
	datasetB   TEXT,
	fromgene   TEXT,
	corrdiff   DOUBLE[] NOT NULL,
	PRIMARY KEY (datasetA, datasetB, fromgene);
);




CREATE TABLE esexpress.diffexp (
	dataset1   TEXT,
	dataset2   TEXT,
	geneid     TEXT,

	mean1      DOUBLE PRECISION NOT NULL,
	mean2      DOUBLE PRECISION NOT NULL,
	pvalue     DOUBLE PRECISION NOT NULL,
	padj       DOUBLE PRECISION NOT NULL,
	PRIMARY KEY (dataset1, dataset2, geneid)
);


CREATE TABLE esexpress.godm (
	dataset1   TEXT,
	dataset2   TEXT,
	goid       TEXT,

	pvalue     REAL NOT NULL,
	tscore     REAL NOT NULL,
	PRIMARY KEY (dataset1, dataset2, goid)
);


CREATE TABLE esexpress.goinfo (
	goid       TEXT,
	goname     TEXT,
        godef      TEXT,
	PRIMARY KEY (goid)
);


CREATE TABLE esexpress.genedm (
	dataset      TEXT,
	geneid       TEXT,
	genedm       TEXT,
	PRIMARY KEY (dataset,geneid)
);


